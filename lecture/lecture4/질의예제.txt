1. TERM 쿼리 실습

A. 데이터 입력
PUT my_index
{
  "mappings": {
    "_doc": {
      "properties": {
        "full_text": {
          "type":  "text"
        },
        "exact_value": {
          "type":  "keyword"
        }
      }
    }
  }
}

PUT my_index/_doc/1
{
  "full_text":   "Quick Foxes!",
  "exact_value": "Quick Foxes!"
}

B. 검색 실습
GET my_index/_search
{
  "query": {
    "term": {
      "exact_value": "Quick Foxes!"
    }
  }
}

GET my_index/_search
{
  "query": {
    "term": {
      "full_text": "Quick Foxes!"
    }
  }
}

GET my_index/_search
{
  "query": {
    "term": {
      "full_text": "foxes"
    }
  }
}

GET my_index/_search
{
  "query": {
    "match": {
      "full_text": "Quick Foxes!"
    }
  }
}


Terms 쿼리 (다중 텀)

미리 색인한 색인에서
POST product/_search
{
    "query" : {
        "terms" : {
            "product_name" : ["여름","신상"],
            "minimum_should_match": 2
        }
    }
}




2. 쿼리스트링 쿼리 실습
일반적인 lucene boolean 파서 문법을 따름
GET product/_search
{
    "query": {
        "query_string" : {
            "fields" : ["product_name", "manufacturer"],
            "query" : "이쁜 AND 사이즈"
        }
    }
}




3. Match 쿼리 실습
POST product/_search
{
    "query" : {
        "match" : {
            "product_name" : {
                "query":"여름 신상",
                "operator":"and"
            }
        }
    }
}

4.Phrase 쿼리 실습
POST product/_search
{
    "query" : {
        "match" : {
            "product_name" : {
                "type": "phrase",
                "query": "여름 신상",
                "slop": 1
            }
        }
    }
}

5. Multi Match 쿼리 실습
POST product/_search
{
    "query" : {
        "multi_match" : {
            "query" : "여름 신상",
            "fields":["product_name","manufacturer"]
        }
    }
}


6. Bool 쿼리 실습
POST product/_search
{
  "query": {
    "bool": {
      "must": [
        { "match": { "product_name": "여름" } }
      ],
      "must_not": [
        { "match": { "category": "여성의류" } }
      ]
    }
  }
}


7 Geo Spatial 쿼리 실습

PUT /geo_example
{
    "mappings": {
        "_doc": {
            "properties": {
                "location": {
                    "type": "geo_shape"
                }
            }
        }
    }
}

POST /geo_example/_doc?refresh
{
    "name": "Wind & Wetter, Berlin, Germany",
    "location": {
        "type": "point",
        "coordinates": [13.400544, 52.530286]
    }
}

GET /example/_search
{
    "query":{
        "bool": {
            "must": {
                "match_all": {}
            },
            "filter": {
                "geo_shape": {
                    "location": {
                        "shape": {
                            "type": "envelope",
                            "coordinates" : [[13.0, 53.0], [14.0, 52.0]]
                        },
                        "relation": "within"
                    }
                }
            }
        }
    }
}



7. NESTED 쿼리(중첩쿼리) 실습

1) 중첩 매핑 설정

PUT nested_index/
{
  "mappings": {
    "nested_type": {
      "properties": {
        "user": {
          "type": "nested",
          "properties" : {
            "first" : { "type" : "text" },
            "last" : { "type" : "text" }
          }
        }
      }
    }
  }
}

2) 데이터 입력
PUT nested_index/nested_type/1
{
  "group" : "fans",
  "user" : [
    {
      "first" : "John",
      "last" :  "Smith"
    },
    {
      "first" : "Alice",
      "last" :  "White"
    }
  ]
}

3) 중첩 쿼리
POST nested_index/_search
{
  "query": {
    "nested": {
      "path": "user",
      "query": {
        "bool": {
          "must": [
            { "match": { "user.first": "Alice" }},
            { "match": { "user.last":  "Smith" }}
          ]
        }
      }
    }
  }
}


8. join query 실습
1) 데이터 매핑
PUT my_index
{
  "mappings": {
    "doc": {
      "properties": {
        "my_join_field": {
          "type": "join",
          "relations": {
            "question": "answer"
          }
        }
      }
    }
  }
}



2) 부모 데이터 입력

PUT my_index/doc/1?routing=111
{
  "text": "This is a question",
  "my_join_field": "question"
}

PUT my_index/doc/2?routing=111
{
  "text": "This is another question",
  "my_join_field": "question"
}

3) 자식 데이터 입력
PUT my_index/doc/3?routing=111
{
  "text": "This is an answer",
  "my_join_field": {
    "name": "answer",
    "parent": "1"
  }
}

PUT my_index/doc/4?routing=111
{
  "text": "This is another answer",
  "my_join_field": {
    "name": "answer",
    "parent": "1"
  }
}


has_parent  쿼리
{
  "query": {
    "has_parent": {
      "parent_type": "question",
      "query": {
        "match": {
          "text":"question"
        }
      }
    }
  }
}

answer를 결과로 리턴됨을 확인

{
  "query": {
    "has_child": {
      "type": "answer",
      "query": {
        "match": {
          "text":"answer"
        }
      }
    }
  }
}

parent를 결과로 리턴함을 확인